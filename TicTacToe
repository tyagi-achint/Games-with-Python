import random


def clear_board(board):
    board=['#','#','#','#'],['#',' ',' ',' '],['#',' ',' ',' '],['#',' ',' ',' ']
    return board

def display_board(board):    
    print('   |   |')
    print(' ' + board[1][1] + ' | ' + board[1][2] + ' | ' + board[1][3])
    print('   |   |')
    print('-----------')
    print('   |   |')
    print(' ' + board[2][1] + ' | ' + board[2][2] + ' | ' + board[2][3])
    print('   |   |')
    print('-----------')
    print('   |   |')
    print(' ' + board[3][1] + ' | ' + board[3][2] + ' | ' + board[3][3])
    print('   |   |')   
    
def player_input():
    marker = ''
    
    while not (marker == 'X' or marker == 'O'):
        marker = input('Player 1: Do you want to be X or O ? ').upper()

    if marker == 'X':
        return ('X', 'O')
    else:
        return ('O', 'X')

    
def replacement(board,marker,row,column):  
    board[row][column]= marker  
    

def win_check(board,mark):    
    return ((board[1][1] == mark and board[1][2] == mark and board[1][3] == mark) or # across the top
    (board[2][1] == mark and board[2][2] == mark and board[2][3] == mark) or # across the middle
    (board[3][1] == mark and board[3][2] == mark and board[3][3] == mark) or # across the bottom
    (board[1][1] == mark and board[2][1] == mark and board[3][1] == mark) or # down the left side
    (board[1][2] == mark and board[2][2] == mark and board[3][2] == mark) or # down the middle
    (board[1][3] == mark and board[2][3] == mark and board[3][3] == mark) or # down the right side
    (board[1][1] == mark and board[2][2] == mark and board[3][3] == mark) or # diagonal
    (board[3][1] == mark and board[2][2] == mark and board[1][3] == mark))

def choose_first():
    if random.randint(0, 1) == 0:
        return 'Player 2'
    else:
        return 'Player 1'
    
def space_check(board,raw,column):
    return board[raw][column] == ' '

def full_board_check(board):
    for i in range(1,4):
        for j in range(1,4):
            if space_check(board,i,j):
                return False
    return True

def player_choice():
    choice = int(input("Pick a row ['1','2','3'] : " ))
    return choice
    
def player_choice2():
    choice = int(input("Pick a column ['1','2','3'] : " ))
    return choice 


def replay():
    choice= input('Do you want to play again? \nEnter Yes for again or any to close : ').lower()
    if choice=='yes':
        game()

def game():
    print('Welcome to Tic Tac Toe!')
    row=0
    column=0
    board=['#','#','#','#'],['#',' ',' ',' '],['#',' ',' ',' '],['#',' ',' ',' ']    
    while True :
        board = clear_board(board)
        player1_marker, player2_marker = player_input()
        turn = choose_first()
        print(turn + ' will go first.')
        
        start = input("Are you ready? Yes or No : ").lower()
        if start == "yes":
            game_on = True
        else:
            game_on = False
    
        while game_on:
            if turn == 'Player 1':
                display_board(board)
                while row and column not in [1,2,3] or not space_check(board,row,column):
                    row= player_choice()
                    column= player_choice2()
                replacement(board,player1_marker,row,column)
                if win_check(board,player1_marker):
                    print("Congrats Player 1 wins")
                    game_on = False
                elif full_board_check(board):
                    display_board(board)
                    print("Game Draw")
                    break
                else:
                    turn ='Player 2'
            else:
                display_board(board)
                while row and column not in [1,2,3] or not space_check(board,row,column):
                    row= player_choice()
                    column= player_choice2()
                replacement(board,player2_marker,row,column)
                if win_check(board,player2_marker):
                    print("Congrats Player 2 wins")
                    game_on = False
                elif full_board_check(board):
                    display_board(board)
                    print("Game Draw")
                    break
                else:
                    turn ='Player 1'
                
        if not replay():
            break
            
            
game()   
            
